{"version":3,"sources":["pages/Rooms.js","pages/Footer.js","pages/Header.js","pages/TasksList.js","pages/AddTasksList.js","pages/Chat.js","pages/CleanerWorkToday.js","pages/FrontDeskCalendar.js","pages/FrontDeskWorkToday.js","App.js","serviceWorker.js","index.js"],"names":["roomNumber","myVar","start","finish","buttonBack","react_default","a","createElement","className","Link","to","index_es","size","icon","faLongArrowAltLeft","buttonRewies","faThumbsUp","faThumbsDown","buttonChat","faComments","Footer","React","Component","now","Date","Header","getDate","getMonth","this","props","title","number","tasks","TasksList","map","task","type","addTasks","AddTasksList","addTask","Rooms","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","match","params","onStart","bind","assertThisInitialized","onFinish","pages_Header","guest","dateEn","dateEx","id","onClick","width","src","alt","getTasks","status","pages_AddTasksList","pages_Footer","setState","fetch","method","then","response","json","element","ReactDOM","render","document","getElementById","element0","element1","toLocaleTimeString","element2","difHour","Math","trunc","parse","toLocaleString","minimumIntegerDigits","useGrouping","difMin","difSec","element3","stateButtonBeginPassive","stateButtonEndActive","setTimeStart","setInterval","setTick","setStatusRoomInProcessCleaning","stateButtonEndPassive","setDifferentTime","clearInterval","setStatusRoomClean","element4","src_pages_TasksList","Chat","linkTo","floors","Floor","setFloor","floor","CleanerWorkToday","_this2","state","rooms","floorNumber","console","log","_this3","CleanerWorkToday_RoomsInFloor","key","CleanerWorkToday_Floor","RoomsInFloor","_this4","_this5","data","_this6","room","CleanerWorkToday_Door","Door","dateEntry","MonthEntry","DayEntry","dateExit","MonthExit","DayExit","guestName","setTimeout","createData","name","calories","fat","carbs","protein","rows","FrontDeskCalendar","FrontDeskCalendar_Calendar","MyTable","Calendar","startDate","handleChange","date","es","selected","onChange","dateFormat","withStyles","theme","root","marginTop","spacing","unit","overflowX","table","minWidth","classes","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","row","component","scope","FrontDeskWorkToday","onNumberChange","onFloorChange","onGuestNameChange","onDateEntryChange","onDateExitChange","onSubmit","event","preventDefault","target","value","Home","App","BrowserRouter","Route","exact","path","Boolean","window","location","hostname","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd47efe3.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\nimport Footer from '../pages/Footer';\r\nimport Header from '../pages/Header';\r\nimport './Rooms.css';\r\nimport TasksList from './TasksList';\r\nimport AddTasksList from './AddTasksList';\r\n\r\nvar roomNumber\r\n\r\nclass Rooms extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n            roomNumber = this.props.match.params.number ;\r\n            this.onStart = this.onStart.bind(this);\r\n            this.onFinish = this.onFinish.bind(this);\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"Container\">\r\n            <Header title=\"ROOM\" number={this.props.match.params.number}/>\r\n            <p className=\"GuestInfo\">{this.props.match.params.guest} {this.props.match.params.dateEn} - {this.props.match.params.dateEx}</p>\r\n            <div className=\"RoomContent\">\r\n               <div className=\"row\"> \r\n                 <div id=\"btnStart\"><div className=\"btnStart\"  onClick={this.onStart}><img width=\"100%;\" src=\"../begin1.png\" alt=\"button Start1\"/></div></div>\r\n                \r\n                 <div id=\"btnFinish\"><div className=\"btnFinish\"><img width=\"100%;\" src=\"../end2.png\" alt=\"button Finish\" /></div></div>\r\n               </div>\r\n                  \r\n                               \r\n               <div className=\"row\">\r\n                 <div id=\"timeStart\"></div>   \r\n                 <div id=\"timeFinish\"></div>                \r\n               </div>\r\n               \r\n                 <div id=\"difTime\"  className=\"difTime\"></div>\r\n              \r\n               <div className=\"row\">\r\n                 <div className=\"btnStatus\" onClick={this.getTasks}><img src={'../' + this.props.match.params.status + '.jpg'} className=\"Room-status-in\" alt=\"status\" /></div>\r\n                 <div id=\"tasksToRoom\">\r\n                    \r\n                    <AddTasksList />\r\n                    <div className=\"tasks\" id=\"tasks\"></div>             \r\n                 </div>\r\n               </div>\r\n               \r\n            </div>\r\n            <Footer /> \r\n        </div>\r\n\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({roomNumber:this.props.match.params.number});\r\n        \r\n    }\r\n\r\n    setStatusRoomClean() {\r\n        // fetch('http://localhost:8000/updateroom/'+roomNumber+'/4',{method:'PUT' }).then(response => {\r\n            fetch('/updateroom/'+roomNumber+'/4',{method:'PUT' }).then(response => {    \r\n        return response.json();\r\n        \r\n      })\r\n    }\r\n\r\n    setStatusRoomInProcessCleaning() {\r\n    // fetch('http://localhost:8000/updateroom/'+roomNumber+'/3',{method:'PUT' }).then(response => {\r\n    fetch('http://localhost:8000/updateroom/'+roomNumber+'/3',{method:'PUT' }).then(response => {    \r\n        return response.json();\r\n        \r\n        })\r\n    }\r\n\r\n    stateButtonBeginPassive() {\r\n        const element = (<div className=\"btnStart\"><img width=\"100%;\" src=\"../begin2.png\" alt=\"button Start1\"/></div>);\r\n        ReactDOM.render(element, document.getElementById('btnStart'));\r\n    }\r\n\r\n    stateButtonEndActive() {\r\n        const element0 = (<div className=\"btnFinish\" onClick={this.onFinish} ><img width=\"100%;\" src=\"../end.png\" alt=\"button Finish\"/></div>);\r\n        ReactDOM.render(element0, document.getElementById('btnFinish'));\r\n    }\r\n\r\n\r\n    stateButtonEndPassive() {\r\n        const element = (<div className=\"btnFinish\"><img width=\"100%;\" src=\"../end2.png\" alt=\"button Finish1\"/></div>);\r\n        ReactDOM.render(element, document.getElementById('btnFinish'));\r\n    }\r\n\r\n    setTimeStart() {\r\n        start = new Date();\r\n\r\n        const element1 = (<h1>{start.toLocaleTimeString()}</h1>);\r\n        ReactDOM.render(element1, document.getElementById('timeStart'));\r\n    }\r\n\r\n    setTick() {\r\n        finish = new Date();\r\n        const element2 = (<h1>{finish.toLocaleTimeString()}</h1>);\r\n        ReactDOM.render(element2, document.getElementById('timeFinish'))\r\n    }\r\n\r\n    setDifferentTime() {\r\n        let difHour = Math.trunc((Date.parse(finish)-Date.parse(start))/3600000).toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false});\r\n        let difMin = Math.trunc((Date.parse(finish)-Date.parse(start))/60000).toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false});\r\n        let difSec = (((Date.parse(finish)-Date.parse(start))%60000)/1000).toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false});\r\n        const element3 = (<h1>{difHour}:{difMin}:{difSec}</h1>);\r\n        ReactDOM.render(element3, document.getElementById('difTime'));\r\n    }\r\n\r\n    onStart() {\r\n        this.stateButtonBeginPassive();\r\n        this.stateButtonEndActive()\r\n        this.setTimeStart();\r\n        myVar = setInterval(this.setTick, 1000);\r\n        this.setStatusRoomInProcessCleaning();\r\n    }\r\n\r\n\r\n    onFinish() {\r\n        this.stateButtonEndPassive();\r\n        this.setDifferentTime();                  \r\n        clearInterval(myVar);\r\n        this.setStatusRoomClean();\r\n        }\r\n\r\n    getTasks() {\r\n        const element4 = ( <TasksList />);\r\n        ReactDOM.render(element4, document.getElementById('tasks'));\r\n    }  \r\n}\r\n\r\n// const Rooms = ({ match }) => {\r\n//     roomNumber = match.params.number;\r\n//     return (\r\n        \r\n//         <div className=\"Container\">\r\n//             <Header title=\"ROOM\" number={match.params.number}/>\r\n//             <p className=\"GuestInfo\">{match.params.guest} {match.params.dateEn} - {match.params.dateEx}</p>\r\n//             <div className=\"RoomContent\">\r\n//                <div className=\"row\"> \r\n//                  <div id=\"btnStart\"><div className=\"btnStart\"  onClick={onStart}><img width=\"100%;\" src=\"../begin1.png\" alt=\"button Start1\"/></div></div>\r\n                \r\n//                  <div id=\"btnFinish\"><div className=\"btnFinish\"><img width=\"100%;\" src=\"../end2.png\" alt=\"button Finish\" /></div></div>\r\n//                </div>\r\n                  \r\n                               \r\n//                <div className=\"row\">\r\n//                  <div id=\"timeStart\"></div>   \r\n//                  <div id=\"timeFinish\"></div>                \r\n//                </div>\r\n               \r\n//                  <div id=\"difTime\"  className=\"difTime\"></div>\r\n              \r\n//                <div className=\"row\">\r\n//                  <div className=\"btnStatus\" onClick={getTasks}><img src={'../' + match.params.status + '.jpg'} className=\"Room-status-in\" alt=\"status\" /></div>\r\n//                  <div id=\"tasksToRoom\">\r\n                    \r\n//                     <AddTasksList />\r\n//                     <div className=\"tasks\" id=\"tasks\"></div>             \r\n//                  </div>\r\n//                </div>\r\n               \r\n//             </div>\r\n//             <Footer /> \r\n//         </div>\r\n//     )\r\n\r\n//  }\r\nvar myVar;\r\nvar start;\r\nvar finish;\r\n// function setStatusRoomClean() {\r\n//         fetch('http://localhost:8000/updateroom/'+roomNumber+'/4',{method:'PUT' }).then(response => {\r\n//         return response.json();\r\n        \r\n//       })\r\n// }\r\n\r\n// function setStatusRoomInProcessCleaning() {\r\n//     fetch('http://localhost:8000/updateroom/'+roomNumber+'/3',{method:'PUT' }).then(response => {\r\n//         return response.json();\r\n        \r\n//     })\r\n// }\r\n\r\n// function stateButtonBeginPassive() {\r\n//     const element = (<div className=\"btnStart\"><img width=\"100%;\" src=\"../begin2.png\" alt=\"button Start1\"/></div>);\r\n//     ReactDOM.render(element, document.getElementById('btnStart'));\r\n// }\r\n\r\n// function stateButtonEndActive() {\r\n//     const element0 = (<div className=\"btnFinish\" onClick={onFinish} ><img width=\"100%;\" src=\"../end.png\" alt=\"button Finish\"/></div>);\r\n//     ReactDOM.render(element0, document.getElementById('btnFinish'));\r\n// }\r\n\r\n\r\n// function stateButtonEndPassive() {\r\n//     const element = (<div className=\"btnFinish\"><img width=\"100%;\" src=\"../end2.png\" alt=\"button Finish1\"/></div>);\r\n//     ReactDOM.render(element, document.getElementById('btnFinish'));\r\n// }\r\n\r\n// function setTimeStart() {\r\n//     start = new Date();\r\n\r\n//     const element1 = (<h1>{start.toLocaleTimeString()}</h1>);\r\n//     ReactDOM.render(element1, document.getElementById('timeStart'));\r\n// }\r\n\r\n// function setTick() {\r\n//     finish = new Date();\r\n//     const element2 = (<h1>{finish.toLocaleTimeString()}</h1>);\r\n//     ReactDOM.render(element2, document.getElementById('timeFinish'))\r\n// }\r\n\r\n// function setDifferentTime() {\r\n//     let difHour = Math.trunc((Date.parse(finish)-Date.parse(start))/3600000).toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false});\r\n//     let difMin = Math.trunc((Date.parse(finish)-Date.parse(start))/60000).toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false});\r\n//     let difSec = (((Date.parse(finish)-Date.parse(start))%60000)/1000).toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false});\r\n//     const element3 = (<h1>{difHour}:{difMin}:{difSec}</h1>);\r\n//     ReactDOM.render(element3, document.getElementById('difTime'));\r\n// }\r\n\r\n// function onStart() {\r\n//     stateButtonBeginPassive();\r\n//     stateButtonEndActive()\r\n//     setTimeStart();\r\n//     myVar = setInterval(setTick, 1000);\r\n//     setStatusRoomInProcessCleaning();\r\n// }\r\n\r\n\r\n// function onFinish() {\r\n//     stateButtonEndPassive();\r\n//     setDifferentTime();                  \r\n//     clearInterval(myVar);\r\n//     setStatusRoomClean();\r\n//     }\r\n\r\n// function getTasks() {\r\n//     const element4 = ( <TasksList />);\r\n//     ReactDOM.render(element4, document.getElementById('tasks'));\r\n// }    \r\n\r\n\r\n\r\nexport default Rooms","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faComments, faLongArrowAltLeft, faThumbsUp, faThumbsDown } from '@fortawesome/free-solid-svg-icons'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst buttonBack = <button className=\"btn\"><Link to={\"/pages/CleanerWorkToday\"}><FontAwesomeIcon size=\"2x\" icon={faLongArrowAltLeft} /></Link></button>\r\nconst buttonRewies = <button className=\"btn\"><FontAwesomeIcon size=\"2x\" icon={faThumbsUp} /><span className=\"IconComments\">&nbsp;/&nbsp;</span><FontAwesomeIcon size=\"2x\" icon={faThumbsDown} /></button>\r\nconst buttonChat = <button className=\"btn\"><Link to={'/pages/Chat'}><FontAwesomeIcon size=\"2x\" icon={faComments} /></Link></button>\r\n// var objFooter = {back: buttonBack, reviews: buttonRewies, chat: buttonChat}\r\n\r\nclass Footer extends React.Component {\r\n  render(){\r\n    return (\r\n      \r\n      <div className=\"Footer\">\r\n        {buttonBack}{buttonRewies}{buttonChat}\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Footer","import React from 'react';\r\n\r\nvar now = new Date();\r\n\r\n\r\nclass Header extends React.Component {\r\n  render(){\r\n    return (\r\n      <div className=\"Header\">\r\n        <div className=\"Date\">{now.getDate()}/{now.getMonth()+1}</div><div className=\"Title\">{this.props.title} {this.props.number}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Header","import React, { Component } from 'react';\r\nimport './TasksList.css';\r\n\r\nlet tasks = [\"beds\",\"floor\",\"shower room and WC\",\"cupboards\"]\r\n\r\nclass TasksList extends React.Component {\r\n  \r\n render() {\r\n    return (\r\n<div className=\"list\">\r\n<p>Standard tasks:</p>\r\n{\r\n    tasks.map((task) => {\r\n        return(\r\n\r\n        <label className=\"container\">{task}\r\n                <input type=\"checkbox\" ></input>\r\n                <span className=\"checkmark\"></span>\r\n        </label>\r\n        )\r\n    })\r\n} \r\n\r\n\r\n</div>\r\n     )\r\n }\r\n}\r\n\r\n\r\n\r\nexport default TasksList","import React, { Component } from 'react';\r\nimport './TasksList.css';\r\n\r\nlet addTasks = [\"windows\", \"fridge\"]\r\n\r\nclass AddTasksList extends React.Component {\r\n  \r\n    render() {\r\n       return (\r\n   <div className=\"list\">\r\n   <p>Additional tasks:</p> \r\n   {\r\n       addTasks.map((addTask) => {\r\n           return <label className=\"container\">{addTask}\r\n                   <input type=\"checkbox\" ></input>\r\n                   <span className=\"checkmark\"></span>\r\n                   </label>\r\n       })\r\n   } \r\n   \r\n   \r\n   </div>\r\n        )\r\n    }\r\n   }\r\n\r\nexport default AddTasksList\r\n","import React from 'react';\r\nimport Footer from '../pages/Footer';\r\nimport Header from '../pages/Header';\r\n\r\nconst Chat = () => {\r\n    \r\n      return (\r\n            <div className=\"Container\">\r\n                <Header title=\"Chat\" />\r\n                <p>Chat</p>\r\n                <Footer linkTo=\"/\" />\r\n            </div>\r\n      );\r\n    \r\n}\r\nexport default Chat","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Link } from 'react-router-dom'\r\nimport Footer from './Footer';\r\nimport Header from './Header';\r\n\r\n\r\n\r\n\r\n// let rooms = [\r\n//   { number: \"101\", status: \"1\", floor: \"1\", guestName: \"Helen\", dateEntry: \"25_1\", dateExit: \"30_1\" },\r\n//   { number: \"103\", status: \"2\", floor: \"1\", guestName: \"John\", dateEntry: \"28_1\", dateExit: \"29_1\" },\r\n//   { number: \"104\", status: \"1\", floor: \"1\", guestName: \"Rebekka\", dateEntry: \"2_2\", dateExit: \"5_2\" },\r\n//   { number: \"106\", status: \"2\", floor: \"1\", guestName: \"Natali\", dateEntry: \"31_1\", dateExit: \"4_2\" },\r\n//   { number: \"206\", status: \"2\", floor: \"2\", guestName: \"Leah\", dateEntry: \"31_1\", dateExit: \"4_2\" },\r\n//   { number: \"306\", status: \"2\", floor: \"3\", guestName: \"Leah\", dateEntry: \"31_1\", dateExit: \"4_2\" },\r\n//   { number: \"304\", status: \"1\", floor: \"3\", guestName: \"Rebekka\", dateEntry: \"2_2\", dateExit: \"5_2\" },\r\n// ]\r\n\r\nlet floors = [{ number: \"1\" }, { number: \"2\" }, { number: \"3\" }]\r\n\r\nclass Floor extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Floor\" onClick={() => this.props.setFloor(this.props.floor.number)}>\r\n        <h2 className=\"Floor-number\">{this.props.floor.number}</h2>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass CleanerWorkToday extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      setFloor :1,\r\n      rooms: []\r\n    }\r\n    this.setFloor = this.setFloor.bind(this);\r\n  }\r\n\r\n  setFloor(floorNumber){\r\n    console.log('set floor to', floorNumber);\r\n    this.setState({setFloor:floorNumber});\r\n    console.log(this.state.setFloor)\r\n  }\r\n\r\n\r\n  \r\n  render() {\r\n    return (\r\n\r\n      <div className=\"Container\">\r\n        <Header title=\"My Work Today\" />\r\n        <RoomsInFloor floor={this.state.setFloor}/>\r\n\r\n        <div>\r\n          {\r\n            floors.map((floor, key) => {\r\n              return <Floor floor={floor} key={key} setFloor={this.setFloor} />\r\n            })\r\n          }\r\n        </div>\r\n        <Footer />\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass RoomsInFloor extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      rooms: []}\r\n  }\r\n  componentDidMount() {\r\n    fetch('/fetch').then(response => {\r\n      return response.json();\r\n    }).then(data => {\r\n      console.log(data);\r\n      this.setState({rooms:data})\r\n    })\r\n  }\r\n  render() {\r\n    console.log (this.state.rooms[0]);\r\n    return (\r\n      <div className=\"Rooms-Today\">\r\n        {\r\n          this.state.rooms.map((room, key) => {\r\n            \r\n            if ((room.floor == this.props.floor) & (room.status == \"1\" || room.status == \"2\")) {\r\n              return <Door room={room} key={key} />\r\n            }\r\n          })\r\n        }\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nclass Door extends React.Component {\r\n  render() {\r\n    let dateEntry = new Date(this.props.room.dateEntry);\r\n    let MonthEntry = dateEntry.getMonth()+1;\r\n    let DayEntry = dateEntry.getDate();\r\n    let dateExit = new Date(this.props.room.dateExit);\r\n    let MonthExit = dateExit.getMonth()+1;\r\n    let DayExit = dateExit.getDate();\r\n    return (\r\n      \r\n      <div className=\"Room\">\r\n        <Link to={'/rooms/' + this.props.room.number + '-' + this.props.room.guestName + '-' + MonthEntry + '_' + DayEntry + '-' + MonthExit + '_' + DayExit + '-' +this.props.room.status}>\r\n          <h2 className=\"Room-number\">{this.props.room.number}</h2>\r\n          <img src={'../' + this.props.room.status + '.jpg'} className=\"Room-status\" alt=\"status\" />\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default CleanerWorkToday","import React, { Component } from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport Footer from './Footer';\r\nimport Header from './Header';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nfunction getRooms() {\r\n\r\n  \r\n    fetch('http://localhost:8000/fetch').then(response => {\r\n      return response.json();\r\n    }).then(data => {\r\n      console.log(\"yes\");\r\n      this.setState({rooms:data})\r\n    })\r\n\r\n}\r\n\r\nsetTimeout(getRooms,1000);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nlet id = 0;\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  id += 1;\r\n  return { id, name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('1_02', '1_02:101', '1_02:103', '1_02:104', '1_02:106'),\r\n  createData('2_02', '2_02:101', '2_02:103', '2_02:104', '2_02:106'),\r\n  createData('3_02', '3_02:101','3_02:103', '3_02:104', '3_02:106'),\r\n  createData('4_02', '4_02:101','4_02:103', '4_02:104', '4_02:106'),\r\n  createData('5_02', '5_02:101','5_02:103', '5_02:104', '5_02:106'),\r\n];\r\n\r\nfunction SimpleTable(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Date/Room</TableCell>\r\n            <TableCell align=\"right\">101</TableCell>\r\n            <TableCell align=\"right\">103</TableCell>\r\n            <TableCell align=\"right\">104</TableCell>\r\n            <TableCell align=\"right\">106</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow key={row.id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.calories}</TableCell>\r\n              <TableCell align=\"right\">{row.fat}</TableCell>\r\n              <TableCell align=\"right\">{row.carbs}</TableCell>\r\n              <TableCell align=\"right\">{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nSimpleTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n}\r\n\r\n// class MyTable extends Component {\r\n//   render(){\r\n//     return (\r\n//       <Paper className={classes.root}>\r\n//         <Table className={classes.table}>\r\n//           <TableHead>\r\n//             <TableRow>\r\n//               <TableCell>Date/Room</TableCell>\r\n//               <TableCell align=\"right\">101</TableCell>\r\n//               <TableCell align=\"right\">103</TableCell>\r\n//               <TableCell align=\"right\">104</TableCell>\r\n//               <TableCell align=\"right\">106</TableCell>\r\n//             </TableRow>\r\n//           </TableHead>\r\n//           <TableBody>\r\n//             {rows.map(row => (\r\n//               <TableRow key={row.id}>\r\n//                 <TableCell component=\"th\" scope=\"row\">\r\n//                   {row.name}\r\n//                 </TableCell>\r\n//                 <TableCell align=\"right\">{row.calories}</TableCell>\r\n//                 <TableCell align=\"right\">{row.fat}</TableCell>\r\n//                 <TableCell align=\"right\">{row.carbs}</TableCell>\r\n//                 <TableCell align=\"right\">{row.protein}</TableCell>\r\n//               </TableRow>\r\n//             ))}\r\n//           </TableBody>\r\n//         </Table>\r\n//       </Paper>\r\n//     )\r\n//   }\r\n// }\r\n\r\nclass FrontDeskCalendar extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n            <Header title=\"Front Desk Calendar\" />  \r\n            <Calendar />\r\n            <MyTable />\r\n            <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Calendar extends React.Component {\r\n  \r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        startDate: new Date()\r\n      };\r\n      this.handleChange = this.handleChange.bind(this);\r\n    }\r\n   \r\n    handleChange(date) {\r\n      this.setState({\r\n        startDate: date\r\n      });\r\n    }\r\n   \r\n    render() {\r\n      return (\r\n        <DatePicker\r\n          selected={this.state.date}\r\n          onChange={this.handleChange}\r\n        //   showTimeSelect\r\n          dateFormat=\"Pp\"\r\n        />\r\n      );\r\n    }\r\n  \r\n}\r\n\r\nconst MyTable = withStyles(styles)(SimpleTable);\r\n\r\nexport default FrontDeskCalendar\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Link } from 'react-router-dom'\r\nimport Footer from './Footer';\r\nimport Header from './Header';\r\n\r\nclass FrontDeskWorkToday extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            number: '',\r\n            guestName: '',\r\n            dateEntry: '',\r\n            dateExit: ''\r\n        };\r\n  \r\n        this.onNumberChange = this.onNumberChange.bind(this);\r\n        this.onFloorChange = this.onFloorChange.bind(this);\r\n        this.onGuestNameChange = this.onGuestNameChange.bind(this);\r\n        this.onDateEntryChange = this.onDateEntryChange.bind(this);\r\n        this.onDateExitChange = this.onDateExitChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n      }\r\n  \r\n      onSubmit(event){\r\n        // fetch('http://localhost:8000/neworder/'+this.state.number+'/'+this.state.guestName+'/'+this.state.dateEntry+'/'+this.state.dateExit,{method:'PUT' }).then(response => {\r\n        fetch('/neworder/'+this.state.number+'/'+this.state.guestName+'/'+this.state.dateEntry+'/'+this.state.dateExit,{method:'PUT' }).then(response => {  \r\n            return response.json();\r\n        })    \r\n        event.preventDefault();\r\n      }\r\n  \r\n      onNumberChange(event){\r\n        this.setState({number: event.target.value});\r\n      }\r\n  \r\n      onFloorChange(event) {\r\n        this.setState({floor: event.target.value});\r\n      }\r\n\r\n      onGuestNameChange(event) {\r\n        this.setState({guestName: event.target.value});\r\n      }\r\n      \r\n      onDateEntryChange(event) {\r\n        this.setState({dateEntry: event.target.value});\r\n      }\r\n      \r\n      onDateExitChange(event) {\r\n        this.setState({dateExit: event.target.value});\r\n      }      \r\n   \r\n   \r\n    render() {\r\n        return (\r\n            \r\n        <form onSubmit={this.onSubmit}>\r\n          <p><label> number: <input type=\"text\" name=\"number\" value={this.state.number}\r\n                           onChange={this.onNumberChange}/></label></p>\r\n          <p><label> floor: <input type=\"text\" name=\"floor\" value={this.state.floor}\r\n                            onChange={this.onFloorChange}/></label></p>\r\n          <p><label> Guest name: <input type=\"text\" name=\"guestName\" value={this.state.guestName}\r\n                            onChange={this.onGuestNameChange}/></label></p>\r\n          <p><label> Date entry: <input type=\"date\" name=\"dateEntry\" value={this.state.dateEntry}\r\n                            onChange={this.onDateEntryChange}/></label></p>\r\n          <p><label> Date exit: <input type=\"date\" name=\"dateExit\" value={this.state.dateExit}\r\n                            onChange={this.onDateExitChange}/></label></p>                                                                                    \r\n          <p><input type=\"submit\" value=\"Submit\" /></p>\r\n        </form>\r\n\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default FrontDeskWorkToday","import React, { Component } from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport './App.css';\nimport Rooms from './pages/Rooms';\nimport Chat from './pages/Chat';\nimport CleanerWorkToday from './pages/CleanerWorkToday';\nimport FrontDeskCalendar from './pages/FrontDeskCalendar';\nimport FrontDeskWorkToday from './pages/FrontDeskWorkToday';\n\n\n\n\n\n\nconst Home = () => (\n<div>\n  <p>Home</p>\n  <Link to={'/pages/CleanerWorkToday'}>Cleaner</Link>\n  <br />\n  <br />\n  <Link to={\"./pages/FrontDeskCalendar\"}>Front desk</Link>\n  <br />\n  <br />\n  <Link to={\"./pages/FrontDeskWorkToday\"}>Front desk today</Link>\n</div>\n)\n\n\nclass App extends React.Component{\n\n  render(){\n    return(\n      <Router>\n       <div>\n        <Route exact={true} path='/' component={Home} />\n        <Route path='/pages/CleanerWorkToday' component={CleanerWorkToday}/>\n        <Route path='/pages/FrontDeskCalendar' component={FrontDeskCalendar}/>\n        <Route path='/pages/FrontDeskWorkToday' component={FrontDeskWorkToday}/>\n        <Route path='/pages/Chat/' component={Chat}/>\n        <Route path='/rooms/:number-:guest-:dateEn-:dateEx-:status' component={Rooms} />\n        \n       </div> \n      </Router>\n\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}